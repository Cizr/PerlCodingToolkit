
use strict;
use warnings;
use IO::Socket::SSL;

# Define the target website
my $website = 'example.com';

# Check if the website is reachable
if (is_reachable($website)) {
    print "Website $website is reachable.\n";
    
    # Check if the website is vulnerable to Heartbleed
    if (is_vulnerable_to_heartbleed($website)) {
        print "Website $website is vulnerable to Heartbleed!\n";
    } else {
        print "Website $website is not vulnerable to Heartbleed.\n";
    }
} else {
    print "Website $website is not reachable.\n";
}

# Function to check if a website is reachable
sub is_reachable {
    my ($website) = @_;
    my $socket = IO::Socket::SSL->new(
        PeerHost => $website,
        PeerPort => 443,
        Timeout => 10,
    );
    return defined $socket;
}

# Function to check if a website is vulnerable to Heartbleed
sub is_vulnerable_to_heartbleed {
    my ($website) = @_;
    my $socket = IO::Socket::SSL->new(
        PeerHost => $website,
        PeerPort => 443,
        SSL_verify_mode => SSL_VERIFY_NONE,
        SSL_version => 'SSLv23:!SSLv2:!SSLv3',
        Timeout => 10,
    );
    return 0 unless defined $socket;
    
    print $socket "\x18\x03\x02\x00\x03\x01\x40\x00";
    my $response = <$socket>;
    return $response =~ m/heartbeat/i;
}
